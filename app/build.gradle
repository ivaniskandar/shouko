import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.android.gms.oss-licenses-plugin'
    id "com.google.protobuf" version "0.9.4"
    id "org.jetbrains.kotlin.plugin.compose" version "${kotlin_version}"
}

final def keystorePropertiesFile = rootProject.file("keystore.properties")
final def gitCommitHash = { ->
    final def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    stdout.toString().trim()
}

android {
    compileSdk 35
    namespace 'xyz.ivaniskandar.shouko'

    defaultConfig {
        applicationId "xyz.ivaniskandar.shouko"
        minSdkVersion 29
        targetSdkVersion 35
        versionCode 9
        versionName "0.8.0"
        resourceConfigurations += ['en', 'ja', 'ru', 'de']
    }

    buildTypes {
        debug {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-base.pro', 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-base.pro', 'proguard-rules.pro'
        }
    }

    buildFeatures {
        compose true
    }

    if (keystorePropertiesFile.exists()) {
        def keystoreProperties = new Properties()
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
        signingConfigs {
            debug {
                storeFile rootProject.file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
        buildTypes.release.signingConfig signingConfigs.debug
        buildTypes.debug.signingConfig signingConfigs.debug
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.each { output ->
            output.versionNameOverride "$versionName-$gitCommitHash"
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.activity:activity-compose:1.9.3'
    implementation "androidx.navigation:navigation-compose:2.8.5"
    implementation "androidx.profileinstaller:profileinstaller:1.4.1"
    implementation "com.github.topjohnwu.libsu:core:5.2.2"
    implementation 'com.squareup.logcat:logcat:0.1'
    implementation 'com.google.android.gms:play-services-oss-licenses:17.1.0'
    implementation 'com.github.KieronQuinn:MonetCompat:0.4.1'
    implementation "io.github.fornewid:material-motion-compose-core:2.0.1"

    implementation platform("androidx.compose:compose-bom-alpha:$compose_bom_version")
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.material:material-icons-extended"
    implementation "androidx.compose.material3:material3"
    implementation "androidx.compose.runtime:runtime-livedata"
    implementation "androidx.compose.ui:ui-text-google-fonts"
    implementation "androidx.compose.ui:ui-tooling-preview"
    debugImplementation "androidx.compose.ui:ui-tooling"

    def accompanist_version = "0.36.0"
    implementation "com.google.accompanist:accompanist-navigation-material:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"

    def coroutines_version = "1.10.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    def lifecycle_version = "2.8.7"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    implementation "androidx.datastore:datastore:1.1.1"
    implementation "com.google.protobuf:protobuf-javalite:$protobuf_version"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobuf_version"
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

kotlin {
    compilerOptions {
        jvmTarget = JvmTarget.JVM_1_8

        freeCompilerArgs.addAll(
                "-opt-in=androidx.compose.material.ExperimentalMaterialApi",
                "-opt-in=androidx.compose.material3.ExperimentalMaterial3Api",
                "-opt-in=androidx.compose.foundation.ExperimentalFoundationApi",
                "-opt-in=androidx.compose.animation.ExperimentalAnimationApi",
                "-opt-in=androidx.compose.ui.ExperimentalComposeUiApi",
                "-opt-in=androidx.compose.ui.text.ExperimentalTextApi",
                "-opt-in=com.google.accompanist.navigation.material.ExperimentalMaterialNavigationApi",
        )
    }
}
